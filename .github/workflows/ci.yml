name: CI

on:
  pull_request:
    branches:
      - main  # Adjust this to your target branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check Jenkins Build Status
        id: jenkins_status
        run: |
          JENKINS_BUILD_URL="${{ secrets.JENKINS_URL }}:${{ secrets.JENKINS_PORT }}/job/bairu_roof_orchestrator/lastBuild/api/json"
          RESPONSE=$(curl -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" -s "$JENKINS_BUILD_URL")

          # Debug output to see the raw response from Jenkins
          echo "Response from Jenkins: $RESPONSE"
          
          # Check for empty response
          if [[ -z "$RESPONSE" ]]; then
            echo "Received an empty response from Jenkins."
            exit 1
          fi

          if [[ $? -ne 0 ]]; then
            echo "Failed to retrieve Jenkins build status."
            exit 1
          fi

          BUILD_STATUS=$(echo "$RESPONSE" | jq -r '.result')

          if [[ "$BUILD_STATUS" == "SUCCESS" ]]; then
            echo "Jenkins build succeeded."
            echo "status=success" >> $GITHUB_ENV
          else
            echo "Jenkins build failed or is unstable."
            echo "status=failed" >> $GITHUB_ENV
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        if: env.status == 'success'  # Only build if Jenkins was successful
        run: ./gradlew build

      - name: Run tests
        if: env.status == 'success'  # Only run tests if Jenkins was successful
        run: ./gradlew test
